<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on David Wilde</title>
    <link>https://david.wilde-ventures.com/tags/programming/</link>
    <description>Recent content in programming on David Wilde</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 22 Mar 2023 09:31:06 +0100</lastBuildDate><atom:link href="https://david.wilde-ventures.com/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My Issue With LLM in Programming</title>
      <link>https://david.wilde-ventures.com/posts/my-issue-with-llm-in-programming/</link>
      <pubDate>Wed, 22 Mar 2023 09:31:06 +0100</pubDate>
      
      <guid>https://david.wilde-ventures.com/posts/my-issue-with-llm-in-programming/</guid>
      <description>There are organizations (example, nothing in particular about this Org, I stumbled over their blog post recently, which inspired the thoughts below) trying to build LLM-based systems that can program. In the example posted above they describe the difficulties with LLM and accessing real-word applications like databases.
The main issue that exists is hallucination. LLMs can write SQL, but they are often prone to making up tables, making up fields, and generally just writing SQL that if executed against your database would not actually be valid.</description>
    </item>
    
  </channel>
</rss>
